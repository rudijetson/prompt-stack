# Production deployment configuration
# For both local production testing and cloud deployments (Railway, Render, etc.)
# Uses production builds with health checks and resource limits

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
    env_file:
      - ./frontend/.env.local
    networks:
      - prompt-stack-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - ENVIRONMENT=production
    env_file:
      - ./backend/.env
    networks:
      - prompt-stack-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

networks:
  prompt-stack-network:
    driver: bridge